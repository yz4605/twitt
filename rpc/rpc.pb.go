// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InfoRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Instruct             string   `protobuf:"bytes,3,opt,name=instruct,proto3" json:"instruct,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoRequest) Reset()         { *m = InfoRequest{} }
func (m *InfoRequest) String() string { return proto.CompactTextString(m) }
func (*InfoRequest) ProtoMessage()    {}
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

func (m *InfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRequest.Unmarshal(m, b)
}
func (m *InfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRequest.Marshal(b, m, deterministic)
}
func (m *InfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRequest.Merge(m, src)
}
func (m *InfoRequest) XXX_Size() int {
	return xxx_messageInfo_InfoRequest.Size(m)
}
func (m *InfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRequest proto.InternalMessageInfo

func (m *InfoRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *InfoRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *InfoRequest) GetInstruct() string {
	if m != nil {
		return m.Instruct
	}
	return ""
}

type Post struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Time                 string   `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Post) Reset()         { *m = Post{} }
func (m *Post) String() string { return proto.CompactTextString(m) }
func (*Post) ProtoMessage()    {}
func (*Post) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}

func (m *Post) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Post.Unmarshal(m, b)
}
func (m *Post) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Post.Marshal(b, m, deterministic)
}
func (m *Post) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Post.Merge(m, src)
}
func (m *Post) XXX_Size() int {
	return xxx_messageInfo_Post.Size(m)
}
func (m *Post) XXX_DiscardUnknown() {
	xxx_messageInfo_Post.DiscardUnknown(m)
}

var xxx_messageInfo_Post proto.InternalMessageInfo

func (m *Post) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Post) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Post) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

type PostRequest struct {
	Post                 *Post    `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostRequest) Reset()         { *m = PostRequest{} }
func (m *PostRequest) String() string { return proto.CompactTextString(m) }
func (*PostRequest) ProtoMessage()    {}
func (*PostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{2}
}

func (m *PostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostRequest.Unmarshal(m, b)
}
func (m *PostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostRequest.Marshal(b, m, deterministic)
}
func (m *PostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostRequest.Merge(m, src)
}
func (m *PostRequest) XXX_Size() int {
	return xxx_messageInfo_PostRequest.Size(m)
}
func (m *PostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostRequest proto.InternalMessageInfo

func (m *PostRequest) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

type FollowingRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Following            string   `protobuf:"bytes,2,opt,name=following,proto3" json:"following,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FollowingRequest) Reset()         { *m = FollowingRequest{} }
func (m *FollowingRequest) String() string { return proto.CompactTextString(m) }
func (*FollowingRequest) ProtoMessage()    {}
func (*FollowingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{3}
}

func (m *FollowingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FollowingRequest.Unmarshal(m, b)
}
func (m *FollowingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FollowingRequest.Marshal(b, m, deterministic)
}
func (m *FollowingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FollowingRequest.Merge(m, src)
}
func (m *FollowingRequest) XXX_Size() int {
	return xxx_messageInfo_FollowingRequest.Size(m)
}
func (m *FollowingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FollowingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FollowingRequest proto.InternalMessageInfo

func (m *FollowingRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *FollowingRequest) GetFollowing() string {
	if m != nil {
		return m.Following
	}
	return ""
}

type SuccessReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuccessReply) Reset()         { *m = SuccessReply{} }
func (m *SuccessReply) String() string { return proto.CompactTextString(m) }
func (*SuccessReply) ProtoMessage()    {}
func (*SuccessReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{4}
}

func (m *SuccessReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuccessReply.Unmarshal(m, b)
}
func (m *SuccessReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuccessReply.Marshal(b, m, deterministic)
}
func (m *SuccessReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuccessReply.Merge(m, src)
}
func (m *SuccessReply) XXX_Size() int {
	return xxx_messageInfo_SuccessReply.Size(m)
}
func (m *SuccessReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SuccessReply.DiscardUnknown(m)
}

var xxx_messageInfo_SuccessReply proto.InternalMessageInfo

func (m *SuccessReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ViewReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Posts                []*Post  `protobuf:"bytes,2,rep,name=posts,proto3" json:"posts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ViewReply) Reset()         { *m = ViewReply{} }
func (m *ViewReply) String() string { return proto.CompactTextString(m) }
func (*ViewReply) ProtoMessage()    {}
func (*ViewReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{5}
}

func (m *ViewReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewReply.Unmarshal(m, b)
}
func (m *ViewReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewReply.Marshal(b, m, deterministic)
}
func (m *ViewReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewReply.Merge(m, src)
}
func (m *ViewReply) XXX_Size() int {
	return xxx_messageInfo_ViewReply.Size(m)
}
func (m *ViewReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewReply.DiscardUnknown(m)
}

var xxx_messageInfo_ViewReply proto.InternalMessageInfo

func (m *ViewReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ViewReply) GetPosts() []*Post {
	if m != nil {
		return m.Posts
	}
	return nil
}

type ListReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	List                 []string `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReply) Reset()         { *m = ListReply{} }
func (m *ListReply) String() string { return proto.CompactTextString(m) }
func (*ListReply) ProtoMessage()    {}
func (*ListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{6}
}

func (m *ListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReply.Unmarshal(m, b)
}
func (m *ListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReply.Marshal(b, m, deterministic)
}
func (m *ListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReply.Merge(m, src)
}
func (m *ListReply) XXX_Size() int {
	return xxx_messageInfo_ListReply.Size(m)
}
func (m *ListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReply.DiscardUnknown(m)
}

var xxx_messageInfo_ListReply proto.InternalMessageInfo

func (m *ListReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ListReply) GetList() []string {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*InfoRequest)(nil), "pb.InfoRequest")
	proto.RegisterType((*Post)(nil), "pb.Post")
	proto.RegisterType((*PostRequest)(nil), "pb.PostRequest")
	proto.RegisterType((*FollowingRequest)(nil), "pb.FollowingRequest")
	proto.RegisterType((*SuccessReply)(nil), "pb.SuccessReply")
	proto.RegisterType((*ViewReply)(nil), "pb.ViewReply")
	proto.RegisterType((*ListReply)(nil), "pb.ListReply")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 369 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xcd, 0x4e, 0xea, 0x40,
	0x14, 0x86, 0x52, 0xa0, 0x3d, 0x70, 0x73, 0xc9, 0xe4, 0x2e, 0x1a, 0x42, 0x6e, 0xc8, 0xac, 0x48,
	0xd0, 0x2e, 0xd0, 0x8d, 0x0f, 0xa0, 0xc6, 0x84, 0x05, 0x29, 0xe2, 0x1e, 0xea, 0xd0, 0x4c, 0x52,
	0x66, 0xc6, 0xce, 0xd4, 0xc6, 0x77, 0xf5, 0x61, 0xcc, 0x99, 0x52, 0x44, 0x45, 0xc1, 0xdd, 0x7c,
	0x3f, 0x7c, 0x7c, 0xe7, 0x9c, 0x14, 0xfc, 0x4c, 0xc5, 0xa1, 0xca, 0xa4, 0x91, 0xc4, 0x51, 0x2b,
	0xba, 0x84, 0xce, 0x9d, 0x58, 0xcb, 0x88, 0x3d, 0xe5, 0x4c, 0x1b, 0xd2, 0x07, 0x2f, 0xd7, 0x2c,
	0x13, 0xcb, 0x0d, 0x0b, 0xea, 0xc3, 0xfa, 0xc8, 0x8f, 0x76, 0x18, 0x35, 0xb5, 0xd4, 0xba, 0x90,
	0xd9, 0x63, 0xe0, 0x94, 0x5a, 0x85, 0x51, 0xe3, 0x42, 0x9b, 0x2c, 0x8f, 0x4d, 0xd0, 0x28, 0xb5,
	0x0a, 0xd3, 0x19, 0xb8, 0x33, 0x79, 0x24, 0x3b, 0x80, 0x76, 0x2c, 0x85, 0x61, 0xc2, 0x6c, 0xa3,
	0x2b, 0x48, 0x08, 0xb8, 0x86, 0x6f, 0xd8, 0x36, 0xd5, 0xbe, 0xe9, 0x18, 0x3a, 0x98, 0x58, 0x95,
	0x1e, 0x80, 0xab, 0xa4, 0x36, 0x36, 0xb4, 0x33, 0xf1, 0x42, 0xb5, 0x0a, 0xad, 0x6c, 0x59, 0x3a,
	0x85, 0xde, 0x8d, 0x4c, 0x53, 0x59, 0x70, 0x91, 0x9c, 0x32, 0xe6, 0x00, 0xfc, 0x75, 0xe5, 0xdf,
	0x96, 0x79, 0x27, 0xe8, 0x08, 0xba, 0xf3, 0x3c, 0x8e, 0x99, 0xd6, 0x11, 0x53, 0xe9, 0x0b, 0x16,
	0xd7, 0x25, 0xb6, 0x41, 0x5e, 0x54, 0x41, 0x7a, 0x0d, 0xfe, 0x03, 0x67, 0xc5, 0x11, 0x1b, 0xf9,
	0x0f, 0x4d, 0xac, 0xa9, 0x03, 0x67, 0xd8, 0xf8, 0xd0, 0xbe, 0xa4, 0xe9, 0x15, 0xf8, 0x53, 0x8e,
	0xb3, 0xfe, 0x1c, 0x43, 0xc0, 0x4d, 0xb9, 0x36, 0x36, 0xc5, 0x8f, 0xec, 0x7b, 0xf2, 0xea, 0x40,
	0xf7, 0xbe, 0xe0, 0xc6, 0xcc, 0x59, 0xf6, 0xcc, 0x63, 0x46, 0xce, 0xa1, 0x35, 0xe7, 0x89, 0x58,
	0x28, 0xf2, 0x17, 0xff, 0x66, 0xef, 0xf0, 0xfd, 0x1e, 0x12, 0xfb, 0x93, 0xd1, 0x1a, 0x39, 0x83,
	0xe6, 0x54, 0x26, 0x5c, 0x9c, 0xe6, 0x0e, 0xa1, 0x8d, 0xbd, 0xb9, 0x48, 0x4a, 0xff, 0xde, 0x85,
	0x0e, 0xfa, 0x47, 0xe0, 0xe2, 0x7e, 0xbe, 0x86, 0xff, 0x41, 0x62, 0xb7, 0x3a, 0x5a, 0x23, 0x63,
	0x68, 0xdf, 0x32, 0x83, 0x5b, 0xf8, 0xc6, 0xbc, 0x5b, 0x10, 0xad, 0x91, 0x09, 0xb4, 0xca, 0x73,
	0x93, 0x7f, 0x28, 0x7d, 0x3e, 0xfd, 0xc1, 0x2a, 0x97, 0xe0, 0x2d, 0xc4, 0x6f, 0x7f, 0xb5, 0x6a,
	0xd9, 0xaf, 0xe8, 0xe2, 0x2d, 0x00, 0x00, 0xff, 0xff, 0x8d, 0xae, 0x92, 0x65, 0x52, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TwittServiceClient is the client API for TwittService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TwittServiceClient interface {
	SignUp(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*SuccessReply, error)
	Login(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*SuccessReply, error)
	Posting(ctx context.Context, in *PostRequest, opts ...grpc.CallOption) (*SuccessReply, error)
	View(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*ViewReply, error)
	GetList(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*ListReply, error)
	Follow(ctx context.Context, in *FollowingRequest, opts ...grpc.CallOption) (*SuccessReply, error)
	UnFollow(ctx context.Context, in *FollowingRequest, opts ...grpc.CallOption) (*SuccessReply, error)
}

type twittServiceClient struct {
	cc *grpc.ClientConn
}

func NewTwittServiceClient(cc *grpc.ClientConn) TwittServiceClient {
	return &twittServiceClient{cc}
}

func (c *twittServiceClient) SignUp(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*SuccessReply, error) {
	out := new(SuccessReply)
	err := c.cc.Invoke(ctx, "/pb.TwittService/SignUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *twittServiceClient) Login(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*SuccessReply, error) {
	out := new(SuccessReply)
	err := c.cc.Invoke(ctx, "/pb.TwittService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *twittServiceClient) Posting(ctx context.Context, in *PostRequest, opts ...grpc.CallOption) (*SuccessReply, error) {
	out := new(SuccessReply)
	err := c.cc.Invoke(ctx, "/pb.TwittService/Posting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *twittServiceClient) View(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*ViewReply, error) {
	out := new(ViewReply)
	err := c.cc.Invoke(ctx, "/pb.TwittService/View", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *twittServiceClient) GetList(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*ListReply, error) {
	out := new(ListReply)
	err := c.cc.Invoke(ctx, "/pb.TwittService/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *twittServiceClient) Follow(ctx context.Context, in *FollowingRequest, opts ...grpc.CallOption) (*SuccessReply, error) {
	out := new(SuccessReply)
	err := c.cc.Invoke(ctx, "/pb.TwittService/Follow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *twittServiceClient) UnFollow(ctx context.Context, in *FollowingRequest, opts ...grpc.CallOption) (*SuccessReply, error) {
	out := new(SuccessReply)
	err := c.cc.Invoke(ctx, "/pb.TwittService/UnFollow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TwittServiceServer is the server API for TwittService service.
type TwittServiceServer interface {
	SignUp(context.Context, *InfoRequest) (*SuccessReply, error)
	Login(context.Context, *InfoRequest) (*SuccessReply, error)
	Posting(context.Context, *PostRequest) (*SuccessReply, error)
	View(context.Context, *InfoRequest) (*ViewReply, error)
	GetList(context.Context, *InfoRequest) (*ListReply, error)
	Follow(context.Context, *FollowingRequest) (*SuccessReply, error)
	UnFollow(context.Context, *FollowingRequest) (*SuccessReply, error)
}

func RegisterTwittServiceServer(s *grpc.Server, srv TwittServiceServer) {
	s.RegisterService(&_TwittService_serviceDesc, srv)
}

func _TwittService_SignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwittServiceServer).SignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TwittService/SignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwittServiceServer).SignUp(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TwittService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwittServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TwittService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwittServiceServer).Login(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TwittService_Posting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwittServiceServer).Posting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TwittService/Posting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwittServiceServer).Posting(ctx, req.(*PostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TwittService_View_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwittServiceServer).View(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TwittService/View",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwittServiceServer).View(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TwittService_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwittServiceServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TwittService/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwittServiceServer).GetList(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TwittService_Follow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwittServiceServer).Follow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TwittService/Follow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwittServiceServer).Follow(ctx, req.(*FollowingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TwittService_UnFollow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwittServiceServer).UnFollow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TwittService/UnFollow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwittServiceServer).UnFollow(ctx, req.(*FollowingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TwittService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.TwittService",
	HandlerType: (*TwittServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignUp",
			Handler:    _TwittService_SignUp_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _TwittService_Login_Handler,
		},
		{
			MethodName: "Posting",
			Handler:    _TwittService_Posting_Handler,
		},
		{
			MethodName: "View",
			Handler:    _TwittService_View_Handler,
		},
		{
			MethodName: "GetList",
			Handler:    _TwittService_GetList_Handler,
		},
		{
			MethodName: "Follow",
			Handler:    _TwittService_Follow_Handler,
		},
		{
			MethodName: "UnFollow",
			Handler:    _TwittService_UnFollow_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}
